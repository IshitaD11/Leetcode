/* 119. Pascal's Triangle II

Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:
        1
      1   1
    1    2   1
  1   3   3   1
1   4   6   4   1 
*/

/* Using recursion get the previous row, then add in the current row*/

class Solution {
    public List<Integer> getRow(int rowIndex) {
        // ending condition
        if(rowIndex==0)
            return new ArrayList<Integer>(List.of(1));
        List<Integer> curr = new ArrayList<Integer>();
        curr.add(1); //adding the 0th element 1
        if(rowIndex>1)
        {
            List<Integer> prev=getRow(rowIndex-1);
            // iterate (rowIndex-1) times to get the mid elements
            for(int i=1;i<rowIndex;i++) 
            {
                curr.add(prev.get(i-1)+prev.get(i));
            }
        }
        curr.add(1);
        return curr;
    }
}
