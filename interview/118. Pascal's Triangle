/* 118. Pascal's Triangle

Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

To visualize:         00
                   10   11
                20    21    22
              30   31    32    33
           40   41   42    43    44  */

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        for(int i=0;i<numRows;i++)
        {
            List<Integer> row = new ArrayList<Integer>();
            for(int j=0;j<=i;j++)
            {
                if(j==0 || j==i)
                {
                    row.add(1); //start and end element of each row is 1
                }
                else
                {
                    //of other than start and end element, it is previous row's sum.
                    //For position 21 = 10 + 11.
                    int tmp = result.get(i-1).get(j-1)+result.get(i-1).get(j);
                    row.add(tmp);
                }
            }
            result.add(row);
        }
        return result;
    }
}
