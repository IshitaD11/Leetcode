/* 59. Spiral Matrix II

Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

Example 1:

Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20 */

class Solution {
    public int[][] generateMatrix(int n) {
        int[][] ans = new int[n][n];
        /* example 2D array >> ODD and Even
        00 01 02    00 01 02 03
        10 11 12    10 11 12 13
        20 21 22    20 21 22 23
                    30 31 32 33 */
        int num=1;
        int row=0;
        int col=0;
        while(n>1)
        {
            // each loop will run for n-1 times in a particular direction, then reduce n and continue for the inner matrix

            // take in --> direction , only col changes
            for(int i=1;i<n;i++)
            {
                ans[row][col++]=num++;
            }
            // take in downward direction , only row changes
            for(int i=1;i<n;i++)
            {
                ans[row++][col]=num++;
            }
            // take in <-- direction , only col changes
            for(int i=1;i<n;i++)
            {
                ans[row][col--]=num++;
            }
            // take in upward direction , only row changes
            for(int i=1;i<n;i++)
            {
                ans[row--][col]=num++;
            }
            n=n-2;
            row++; col++; //for inner matrix
        }
        if(n==1)
        {
            ans[row][col]=num;
        }
        return ans;
    }
}
